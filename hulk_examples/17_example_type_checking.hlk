type Point(x: Number, y: Number) {
    x: Number = x;
    y: Number = y;

}

type Bird {
    // Implementation
}

type Plane {
    // Implementation
}

type Superman {
    // Implementation
}

type A {
    // Implementation
}

type B inherits A {
    // Implementation
}

type C inherits A {
    // Implementation
}
function tan(x: Number): Number => sin(x) / cos(x);
{
    let x : A = if (rand() < 0.5) new B() else new C() in
        if (x is B)
            let y : B = x as B in {
                // you can use y with static type B
            }
        else {
            // x cannot be downcasted to B
        }
    let x: Number = 42 in print(x);
    let x: Superman = new Superman() in
        print(
            if (x is Bird) "It's bird!"
            elif (x is Plane) "It's a plane!"
            else "No, it's Superman!"
        );
}